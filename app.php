<?php
// ==============================================================================
// app.php - Main Dashboard (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á Tree 101)
// (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) - ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Frontend (‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•) ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
// ==============================================================================

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// (‡∏•‡∏ö) - ‡∏¢‡πâ‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ DB ‡πÅ‡∏•‡∏∞ SQL Query ‡πÑ‡∏õ‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà api.php

// (‡πÉ‡∏´‡∏°‡πà) ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ù‡∏±‡πà‡∏á Client (JavaScript)
// (‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö api.php ‡πÅ‡∏•‡∏∞ dbwrite.php)
$harvest_threshold = 90.0;
$cycle_days = 12.0; 
$fill_rate_per_day = ($cycle_days > 0) ? ($harvest_threshold / $cycle_days) : 0; 

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rubber Tree Monitoring System - Dashboard</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .status-harvest-ready { background-color: #d4edda; color: #155724; font-weight: bold; } 
        .status-no-data { background-color: #e9ecef; color: #6c757d; } 
        
        /* (‡πÉ‡∏´‡∏°‡πà) ‡πÄ‡∏û‡∏¥‡πà‡∏° animation_loading ‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ */
        .loading-cell { color: #aaa; font-style: italic; }
    </style>
</head>
<body>

<div class="container mt-5">
    <h1 class="mb-4 text-primary">Rubber Tree Plantation Dashboard (Tree 101)</h1>

    <div class="alert alert-info" role="alert">
        <h2 class="h5">News and Current Latex Prices </h2>
        <?php include 'price_fetcher.php'; // Include Price Fetcher file (‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà) ?>
    </div>
    
    <div class="card shadow-sm">
        <div class="card-header bg-success text-white">
            <h2>Status for Tree 101</h2>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover table-sm">
                    <thead class="thead-light">
                        <tr>
                            <th>Tree ID</th>
                            <th>Location</th>
                            <th>Fill Level (%)</th>
                            <th>Status</th>
                            <th>Last Updated</th>
                        </tr>
                    </thead>
                    <!-- (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) - <tbody> ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢ JavaScript -->
                    <tbody id="data-container"> 
                        <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà -->
                        <tr>
                            <td colspan="5" class="text-center loading-cell">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- (‡πÉ‡∏´‡∏°‡πà) - ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ -->
<script>
    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å PHP ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô JavaScript
    const harvestThreshold = <?php echo $harvest_threshold; ?>;
    const fillRatePerDay = <?php echo $fill_rate_per_day; ?>;
    const updateInterval = 5000; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (5000ms)

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    async function updateData() {
        try {
            const response = await fetch('api.php'); // 1. ‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å api.php
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json(); // 2. ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô JSON

            const container = document.getElementById('data-container');
            let newRowHTML = '';

            // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (data && data.tree_id) {
                let statusText = "‚úì Normal";
                let rowClass = "";
                let currentPercentage = parseFloat(data.latex_percentage);

                // --- 4. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡πÉ‡∏ô PHP) ---
                if (currentPercentage >= harvestThreshold) {
                    rowClass = "status-harvest-ready";
                    statusText = "üå≥ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß!";
                } else {
                    if (fillRatePerDay > 0 && currentPercentage >= 0) {
                        const percentageRemaining = harvestThreshold - currentPercentage;
                        const daysRemainingDynamic = percentageRemaining / fillRatePerDay;
                        statusText = `‚è≥ (‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏≠‡∏µ‡∏Å ${Math.ceil(daysRemainingDynamic)} ‡∏ß‡∏±‡∏ô)`;
                    } else {
                        statusText = `‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏∞‡∏™‡∏° (${currentPercentage.toFixed(1)}%)`;
                    }
                }
                // --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ---

                // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà
                newRowHTML = `
                    <tr class="${rowClass}">
                        <td>${data.tree_id}</td>
                        <td>${data.tree_location}</td>
                        <td>${currentPercentage !== null ? currentPercentage.toFixed(2) + '%' : 'N/A'}</td>
                        <td>${statusText}</td>
                        <td>${data.last_update}</td>
                    </tr>
                `;

            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                newRowHTML = `
                    <tr>
                        <td colspan="5" class="text-center status-no-data">? No Data (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå)</td>
                    </tr>
                `;
            }
            
            // 6. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            container.innerHTML = newRowHTML;

        } catch (error) {
            // ‡∏Å‡∏£‡∏ì‡∏µ API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
            console.error('Fetch error:', error);
            const container = document.getElementById('data-container');
            container.innerHTML = `<tr><td colspan="5" class="text-center text-danger">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>`;
        }
    }

    // 7. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    updateData();

    // 8. ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å‡πÜ 'updateInterval' (5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    setInterval(updateData, updateInterval);

</script>

</body>
</html>
<?php 
// (‡∏•‡∏ö) - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏¥‡∏î $conn ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î
?>

